# Generated by Django 5.1.6 on 2025-03-21 12:39

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(message='Este campo debe comenzar con una letra.', regex='^[A-Za-zÁÉÍÓÚáéíóúÑñ].*')])),
                ('surname', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(message='Este campo debe comenzar con una letra.', regex='^[A-Za-zÁÉÍÓÚáéíóúÑñ].*')])),
                ('username', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(help_text='La contraseña debe tener al menos 8 caracteres,una mayúscula, un número y un carácter especial.', max_length=255, validators=[django.core.validators.RegexValidator(message='La contraseña debe contener al menos una letra mayúscula.', regex='^(?=.*[A-Z])'), django.core.validators.RegexValidator(message='La contraseña debe contener al menos un número.', regex='^(?=.*\\d)'), django.core.validators.RegexValidator(message='La contraseña debe contener al menos un carácter especial.', regex='^(?=.*[!@#$%^&*()_+\\-=\\[\\]{};:"\\\\|,.<>\\/?])'), django.core.validators.RegexValidator(message='La contraseña debe tener al menos 8 caracteres.', regex='^.{8,}$')])),
                ('email', models.CharField(max_length=255, unique=True, validators=[django.core.validators.EmailValidator(message='Introduce un email válido.')])),
                ('phone_number', models.CharField(blank=True, max_length=25, null=True, validators=[django.core.validators.RegexValidator(message='Introduce un númerode teléfono válido.', regex='^\\+?[0-9]{7,15}$')])),
                ('country', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(message='Este campo debe comenzar con una letra.', regex='^[A-Za-zÁÉÍÓÚáéíóúÑñ].*')])),
                ('city', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(message='Este campo debe comenzar con una letra.', regex='^[A-Za-zÁÉÍÓÚáéíóúÑñ].*')])),
                ('address', models.TextField(blank=True, max_length=75, null=True, validators=[django.core.validators.RegexValidator(message='Este campo debe comenzar con una letra.', regex='^[A-Za-zÁÉÍÓÚáéíóúÑñ].*')])),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='El codigo postal debe tener el                     formato 12345 o 12345-6789.', regex='^[0-9]{5}(-[0-9]{4})?$')])),
                ('is_verified', models.BooleanField(default=False)),
                ('pricing_plan', models.CharField(choices=[('free', 'Gratis'), ('premium', 'Premium')], default='free', max_length=10)),
                ('owner_rating', models.FloatField(default=0.0)),
                ('renter_rating', models.FloatField(default=0.0)),
                ('reset_token', models.CharField(blank=True, max_length=255, null=True)),
                ('reset_token_expiration', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField(default=0.0)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_received', to='usuarios.user')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_given', to='usuarios.user')),
            ],
            options={
                'unique_together': {('reviewer', 'reviewed_user')},
            },
        ),
    ]
