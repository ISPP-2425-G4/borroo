# Generated by Selenium IDE
import pytest
import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC


@pytest.fixture
def driver():
    options = Options()
    driver = webdriver.Chrome(options=options)
    driver.set_window_size(1280, 1024)
    yield driver
    driver.quit()


@pytest.mark.e2e
def test_e2e_registro(driver):
    wait = WebDriverWait(driver, 10)

    # Navegar a la página principal
    driver.get("http://localhost:5173")
    time.sleep(2)

    # Hacer clic en el menú de usuario
    menu_button = wait.until(
        EC.element_to_be_clickable((
            By.CSS_SELECTOR,
            ".MuiIconButton-colorInherit"
        ))
    )
    menu_button.click()
    time.sleep(1)

    # Seleccionar opción de registro
    register_option = wait.until(
        EC.element_to_be_clickable((
            By.CSS_SELECTOR,
            ".MuiMenuItem-root:nth-child(2)"
        ))
    )
    register_option.click()
    time.sleep(1)

    # Rellenar formulario de registro
    username_field = wait.until(
        EC.presence_of_element_located((
            By.CSS_SELECTOR,
            'input[type="text"]:first-of-type'
        ))
    )
    username_field.send_keys("testUser")
    driver.find_element(By.ID, ":r1p:").send_keys("Test")
    driver.find_element(By.ID, ":r1q:").send_keys("User")
    driver.find_element(By.ID, ":r1r:").send_keys("testuser@example.es")
    driver.find_element(By.ID, ":r1s:").send_keys("Password123_")

    confirm_password_field = wait.until(
        EC.presence_of_element_located((
            By.CSS_SELECTOR,
            'input[name="password2"]'
        ))
    )
    confirm_password_field.send_keys("Password123_")

    # Aceptar términos y condiciones - usando una estrategia diferente
    try:
        terms_checkbox = wait.until(
            EC.element_to_be_clickable((
                By.XPATH,
                (
                    "//span[contains(text(), 'términos y condiciones')]"
                    "/preceding-sibling::span/input"
                )
            ))
        )
        driver.execute_script("arguments[0].click();", terms_checkbox)
    except Exception:
        checkboxes = driver.find_elements(
            By.CSS_SELECTOR, 'input[type="checkbox"]')
        terms_checkbox = checkboxes[-1]
        driver.execute_script("arguments[0].click();", terms_checkbox)

    # Enviar formulario
    submit_button = wait.until(
        EC.element_to_be_clickable((
            By.CSS_SELECTOR,
            ".MuiButton-contained"
        ))
    )
    submit_button.click()
    time.sleep(5)

    assert driver.current_url == "http://localhost:5173/login"
